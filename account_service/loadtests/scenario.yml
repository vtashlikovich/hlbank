### CONFIGURATION ###########################
config:
  target: 'http://localhost:3000'
  tls:
    rejectUnauthorized: false
  http:
    # Responses have to be sent within 10 seconds or the request will be aborted
    timeout: 10
  ensure:
    # Force artillery to exit with a non-zero code when a condition is not met, useful for CI/CD
    p95: 500
    maxErrorRate: 5

  # payload:
  #   path: '{{ $environment }}-users.csv'
  #   fields:
  #     - 'email'
  #     - 'password'

  # variables:
  #   debugtype: {{ $processEnvironment.DEBUG }}
  #   password: XXXX
  #   deviceid: XXXX
  # environment variable usage: {{ $processEnvironment.DEBUG }}

  #-- DEFAULTS --------------------------------
  defaults:
    headers:
      content-type: 'application/json'
  #   cookie:
  #     GCP_IAP_UID: '113766961984719164756'

  # This is the pre-request function we are using to create the data
  processor: 'generate-data.js'

  #-- PHASES --------------------------------
  phases:
    - duration: 10
      arrivalRate: 10
      name: 'Warm up'
    - duration: 600
      arrivalRate: 20
      name: 'Heat wave 1'
    # - duration: 20
    #   arrivalRate: 30
    #   name: 'Heat wave 2'
    # - duration: 10
    #   arrivalRate: 5
    #   name: 'Cool down'

  #-- ENVIRONMENTS --------------------------------
  # artillery run -e stage script.yml
  # environments:
  #   prod:
  #     target: 'http://localhost:3000'
  #     phases:
  #       - duration: 120
  #         arrivalRate: 10
  #         name: '- prod 1st'
  #   stage:
  #     target: 'http://localhost:3000'
  #     phases:
  #       - duration: 2
  #         arrivalRate: 3
  #         name: '- stage 1st'

# before:
#   flow:
#     - log: 'Login {{ email }}'
#     - post:
#         url: '/auth/login'
#         json:
#           email: '{{ email }}'
#           password: '{{ password }}'
#         capture:
#           - json: $.access_token
#             as: token
#         expect:
#           - statusCode: 200
#         # afterResponse: 'checkCookie'
#     - log: '... login success under {{ email }}'
#     - think: 1

### SCENARIOS ###########################
scenarios:
- name: 'Create transaction'
  flow:
    - function: 'generateRandomData'
    - post:
        url: '/transaction'
        json:
          email: '{{ email }}'
          customer_uid: 'CUFDFDFDF'
          account_uid: 'ACFFEEREG'
          type: 1
          amount: 100
          currency: 'USD'
          fx_rate_uid: 'FX34234324'
          party_bic: '{{ party_bic }}'
          party_iban: '{{ party_iban }}'
          party_account_number: '{{ party_account_number }}'
          party_sortcode: ''
          party_bank: 'FastClood'
          party_bank_country: '{{ party_bank_country }}'
          party_type: 1
          party_name: '{{ party_name }}'
          party_country: '{{ party_country }}'
          party_address: 'Olympus Mons'
          party_zipcode: '{{ party_zipcode }}'
          party_city: '{{ party_city }}'
          party_contact: '{{ party_contact }}'
          party_phone: '{{ party_phone }}'
          party_email: '{{ party_email }}'
          provider: 'GALAXY'
          description: '{{ description }}'
        expect:
          - statusCode: 200
        # afterResponse: 'checkCookie'